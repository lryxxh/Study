/**
 * Iterator.java
 * Created by liurenyong at 2013-12-24
 * @Copyright (c) 2013 China National Petroleum Corporation All Rights Reserved.
 */
package design.迭代器模式;

/**
 * <定义>提供一种方法顺序访问一个聚合对象中的各个元素，而又不需暴露该对象的内部表示。
 * <本质>控制访问聚合对象中的元素。
 * <优点>
 * 1.更好的封装性
 * 2.迭代器模式可以让你访问一个聚合对象的内容，而无须暴露改聚合对象的内部表示，从而提高聚合对象的封装性
 * 3.可以以不同的遍历方式来遍历一个聚合
 * 4.使用迭代器模式，使得聚合对象的内容和具体的迭代算法分离开。这种可以通过使用不同的迭代器的实例，不同的遍历方式来遍历一个聚合对象了。
 * 5.迭代器简化了聚合的接口。
 * 6.有了迭代器的接口，聚合本身就不需要再定义这些借口了，从而简化了聚合的接口定义。
 * 7.简化客户端调用。
 * 8.迭代器为遍历不同的聚合对象提供了一个统一的接口，使得客户端遍历聚合对象的内容变得更简单。
 * 9.同一个聚合上可以有多个遍历。
 * 10.每个迭代器保持它自己的遍历状态。
 * <缺点>
 * <使用场景>
 * 1.如果希望提供访问一个聚合对象的内容，单丝不想暴露他的内部表示时，可以使用迭代器模式来提供迭代器接口，从而让客户端只是通过迭代器的接口来访问聚合对象，而无须关心聚合对象的内部实现。
 * 2.如果你希望有多种遍历方式可以访问聚合对象，可以使用迭代器模式。
 * 3.如果你希望为遍历不同的聚合对象提供一个统一的接口，可以使用迭代器模式。
 * @author liurenyong 2013-12-24
 */
public interface Iterator {
    
    /** 
     * 移动到聚合对象的第一个位置。
     */
    public void first();
    
    /** 
     * 移动到聚合对象的下一个位置。
     */
    public void next();
    
    /** 
     * 判断是否已经移动到聚合对象的最后一个位置。
     * @return
     */
    public boolean isDone();

    /**
     * 获取迭代的当前元素。 
     * @return
     */
    public Object currentObject();
}
